[{"C:\\Users\\Smart\\store-app\\src\\index.js":"1","C:\\Users\\Smart\\store-app\\src\\reportWebVitals.js":"2","C:\\Users\\Smart\\store-app\\src\\App.js":"3","C:\\Users\\Smart\\store-app\\src\\components\\Navigation\\Navigation.jsx":"4","C:\\Users\\Smart\\store-app\\src\\redux\\store.js":"5","C:\\Users\\Smart\\store-app\\src\\redux\\productsReducer.js":"6","C:\\Users\\Smart\\store-app\\src\\components\\Products\\ProductsContainer.jsx":"7","C:\\Users\\Smart\\store-app\\src\\components\\SellOrders\\SellOrdersContainer.jsx":"8","C:\\Users\\Smart\\store-app\\src\\components\\BuyOrders\\BuyOrdersContainer.jsx":"9","C:\\Users\\Smart\\store-app\\src\\redux\\sellOrdersReducer.js":"10","C:\\Users\\Smart\\store-app\\src\\redux\\buyOrdersReducer.js":"11","C:\\Users\\Smart\\store-app\\src\\components\\Products\\AddProductForm.jsx":"12","C:\\Users\\Smart\\store-app\\src\\components\\SellOrders\\SellOrderForm.jsx":"13","C:\\Users\\Smart\\store-app\\src\\components\\BuyOrders\\BuyOrderForm.jsx":"14"},{"size":779,"mtime":1608239333721,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":1286,"mtime":1608649967916,"results":"18","hashOfConfig":"16"},{"size":841,"mtime":1608650135326,"results":"19","hashOfConfig":"16"},{"size":430,"mtime":1608397238999,"results":"20","hashOfConfig":"16"},{"size":831,"mtime":1608639874683,"results":"21","hashOfConfig":"16"},{"size":2442,"mtime":1608665879205,"results":"22","hashOfConfig":"16"},{"size":1863,"mtime":1608649636431,"results":"23","hashOfConfig":"16"},{"size":3252,"mtime":1608667651604,"results":"24","hashOfConfig":"16"},{"size":505,"mtime":1608399392186,"results":"25","hashOfConfig":"16"},{"size":532,"mtime":1608402888677,"results":"26","hashOfConfig":"16"},{"size":2781,"mtime":1608665671851,"results":"27","hashOfConfig":"16"},{"size":2992,"mtime":1608667726415,"results":"28","hashOfConfig":"16"},{"size":1973,"mtime":1608667549895,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1xwccsc",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"32"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"32"},"C:\\Users\\Smart\\store-app\\src\\index.js",[],["67","68"],"C:\\Users\\Smart\\store-app\\src\\reportWebVitals.js",[],"C:\\Users\\Smart\\store-app\\src\\App.js",["69"],"import './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport { Route } from 'react-router-dom';\nimport SellOrdersContainer from './components/SellOrders/SellOrdersContainer';\nimport BuyOrdersContainer from './components/BuyOrders/BuyOrdersContainer';\nimport AddProductForm from './components/Products/AddProductForm';\nimport SellOrderForm from './components/SellOrders/SellOrderForm';\nimport BuyOrderForm from './components/BuyOrders/BuyOrderForm';\nimport ProductsContainer from './components/Products/ProductsContainer';\n\n\n\n\nfunction App() {\n  return (\n    <div>\n      <Navigation />  \n      <Route exact strict path = '/products/add'\n              component = {() => <AddProductForm />} />\n      <Route exact strict path='/products'\n                render = {() =><ProductsContainer/> } />\n      <Route exact strict  path = '/orders/sell'\n              render = {() => <SellOrdersContainer/>} />\n      <Route exact strict  strict path = '/orders/buy'\n              render = {() => <BuyOrdersContainer/>} />\n      <Route exact strict path = '/orders/sell/create'\n              render = {() => <SellOrderForm />} />\n      <Route exact strict path = '/orders/buy/create'\n              render = {() => <BuyOrderForm/>} />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Smart\\store-app\\src\\components\\Navigation\\Navigation.jsx",["70"],"import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nlet Navigation = () =>{\r\n    return <Navbar bg=\"dark\" variant=\"dark\">\r\n    <Nav className=\"mr-auto\">\r\n      <Nav.Link href=\"/products\">Products</Nav.Link>\r\n      <Nav.Link href=\"/products/add\">Add new product</Nav.Link>\r\n      <Nav.Link href=\"/orders/buy\">Buy orders</Nav.Link>\r\n      <Nav.Link href=\"/orders/sell\">Sell orders</Nav.Link>\r\n    </Nav>\r\n    \r\n  </Navbar>\r\n    \r\n/*     <nav>\r\n        <li><NavLink to= \"/products\">Products</NavLink></li>\r\n        <li><NavLink to= \"/orders/buy\">Buy orders</NavLink></li>\r\n        <li><NavLink to= \"/orders/sell\">Sell orders</NavLink></li>\r\n    </nav> */\r\n}\r\n\r\nexport default Navigation;","C:\\Users\\Smart\\store-app\\src\\redux\\store.js",[],"C:\\Users\\Smart\\store-app\\src\\redux\\productsReducer.js",[],"C:\\Users\\Smart\\store-app\\src\\components\\Products\\ProductsContainer.jsx",["71"],"import React from 'react';\r\nimport * as axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport {setProducts, chooseProduct} from '../../redux/productsReducer';\r\nimport {Link} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Button from 'react-bootstrap/Button'\r\nimport s from './Products.module.css';\r\n\r\n\r\nclass ProductsApiComponent extends React.Component {\r\n\r\n    /* constructor(props){\r\n        super(props);\r\n    }\r\n */\r\n    componentDidMount() {\r\n        axios\r\n        .get(\"https://localhost:44367/api/products\")\r\n        .then((response) => {\r\n            this.props.setProducts(response.data);\r\n        });\r\n    }\r\n\r\n    clickHandler = (productId) => {\r\n        this.props.chooseProduct(productId);\r\n    }\r\n\r\n    render() {\r\n\r\n        let products = this.props.products.map(p => {\r\n            return <tr>\r\n                <td>{p.productID}</td>\r\n                <td>{p.productName}</td>\r\n                <td>{p.cost}</td>\r\n                <td>{p.number <= 0 \r\n                            ? \"not available\" \r\n                            : <div> {p.number}</div>}\r\n                </td>\r\n                <td><Button variant=\"outline-primary\" onClick ={() => this.clickHandler(p.productID)}>\r\n                <Link to= \"/orders/sell/create\" className={s.link}>Sell</Link>\r\n            </Button>\r\n            <Button variant=\"outline-primary\"  onClick ={() => this.clickHandler(p.productID)}>\r\n                <Link to= \"/orders/buy/create\" className={s.link}>Buy</Link>\r\n            </Button></td>\r\n          </tr>\r\n        })\r\n\r\n        return <div>\r\n            <h2>Products</h2>\r\n            <Table size=\"lg\" bordered = {true}  size=\"md\" striped = {true}>\r\n                <thead>\r\n                    <tr>\r\n                    <th>#</th>\r\n                    <th>Product</th>\r\n                    <th>Cost</th>\r\n                    <th>Number</th>\r\n                    <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"bordered\">\r\n                    {products}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        products: state.ProductsPage.products\r\n    };\r\n}\r\n\r\nlet ProductsContainer = connect(mapStateToProps, {setProducts, chooseProduct})(ProductsApiComponent);\r\n\r\nexport default ProductsContainer;",["72","73"],"C:\\Users\\Smart\\store-app\\src\\components\\SellOrders\\SellOrdersContainer.jsx",["74","75"],"import React from 'react';\r\nimport * as axios from 'axios';\r\nimport {setSellOrders} from './../../redux/sellOrdersReducer'\r\nimport { connect } from 'react-redux';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nclass SellOrdersApiComponent extends React.Component {\r\n    componentDidMount(){\r\n        debugger;\r\n        axios\r\n        .get(\"https://localhost:44367/api/sell/orders\")\r\n        .then((response) => {\r\n            this.props.setSellOrders(response.data);\r\n        });\r\n    }\r\n    \r\n    render() {\r\n       \r\n        let sellOrders = this.props.sellOrders.map(o => {\r\n            return <tr>\r\n                <td>{o.id}</td>\r\n                <td>{o.date}</td>\r\n                <td>{o.productId}</td>\r\n                <td>{o.number}</td>\r\n                <td>{o.sum}</td>\r\n                <td>{o.customer}</td>\r\n                <td>{!o.isClosed ? \"Not closed\" : \"Closed\"}</td>\r\n        </tr>\r\n        });\r\n\r\n\r\n        return <div>\r\n            <h2>Sell orders</h2>\r\n            <Table size=\"lg\" bordered = {true}  size=\"md\" striped = {true}>\r\n                <thead>\r\n                    <tr>\r\n                    <th>Id</th>\r\n                    <th>Date</th>\r\n                    <th>Product id</th>\r\n                    <th>Number</th>\r\n                    <th>Sum</th>\r\n                    <th>Customer</th>\r\n                    <th>Status</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"bordered\">\r\n                    {sellOrders}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        sellOrders: state.SellOrdersPage.sellOrders\r\n    }\r\n}\r\n\r\n\r\nlet SellOrdersContainer = connect(mapStateToProps, {setSellOrders})(SellOrdersApiComponent);\r\n\r\nexport default SellOrdersContainer;","C:\\Users\\Smart\\store-app\\src\\components\\BuyOrders\\BuyOrdersContainer.jsx",["76"],"import React from 'react';\r\nimport * as axios from 'axios';\r\nimport {setBuyOrders} from './../../redux/buyOrdersReducer';\r\nimport { connect } from 'react-redux';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Button from 'react-bootstrap/Button'\r\nimport { Link } from 'react-router-dom';\r\nimport s from './BuyOrder.module.css';\r\n\r\nclass BuyOrdersApiComponent extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = \r\n        {\r\n            orderId: 0,\r\n            supplier: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios\r\n        .get(\"https://localhost:44367/api/buy/orders\")\r\n        .then((response) => {\r\n            debugger;\r\n            this.props.setBuyOrders(response.data);\r\n        })\r\n    }\r\n\r\n    submitHandler = (id) =>{\r\n        //console.log(id);\r\n        if(!this.state.supplier){\r\n            alert(\"Enter supplier name\");\r\n            return;\r\n        }\r\n\r\n        debugger;\r\n        axios.put(`https://localhost:44367/api/buy/orders/${id}`, {\r\n            name: this.state.supplier\r\n        })\r\n        .then((response) => {\r\n            console.log(response);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    changeHandler = (e) => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n\r\n    render() {\r\n        const {supplier} = this.state;\r\n\r\n        let buyOrders = this.props.buyOrders.map(o => {\r\n            return <tr>\r\n                <td>{o.id}</td>\r\n                <td>{o.date}</td>\r\n                <td>{o.productId}</td>\r\n                <td>{o.number}</td>\r\n                <td>{o.sum}</td>\r\n                <td>{o.supplierName \r\n                        ? o.supplierName\r\n                        : <form >\r\n                            <input type=\"text\" name=\"supplier\" value={supplier} onChange = {this.changeHandler}/>\r\n                         </form>\r\n                    }</td>\r\n                <td>{ o.supplierName \r\n                        ? \"Closed\"\r\n                        : <Button variant=\"outline-primary\" onClick={() => {this.submitHandler(o.id)}}>\r\n                                <Link to=\"/products\" className={s.link}>Submit</Link>\r\n                            </Button> \r\n                    }</td>\r\n        </tr>\r\n        });\r\n    \r\n    \r\n        return <div>\r\n            <div>\r\n            <h2>Buy orders</h2>\r\n            <Table size=\"lg\" bordered = {true}  size=\"md\" striped = {true}>\r\n                <thead>\r\n                    <tr>\r\n                    <th>Id</th>\r\n                    <th>Date</th>\r\n                    <th>Product id</th>\r\n                    <th>Number</th>\r\n                    <th>Sum</th>\r\n                    <th>Supplier</th>\r\n                    <th>Status</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"bordered\">\r\n                    {buyOrders}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        buyOrders: state.BuyOrdersPage.buyOrders\r\n    }\r\n}\r\n\r\nlet BuyOrdersContainer = connect(mapStateToProps, {setBuyOrders})(BuyOrdersApiComponent);\r\n\r\nexport default BuyOrdersContainer;","C:\\Users\\Smart\\store-app\\src\\redux\\sellOrdersReducer.js",[],"C:\\Users\\Smart\\store-app\\src\\redux\\buyOrdersReducer.js",[],"C:\\Users\\Smart\\store-app\\src\\components\\Products\\AddProductForm.jsx",[],"C:\\Users\\Smart\\store-app\\src\\components\\SellOrders\\SellOrderForm.jsx",["77","78"],"import React from 'react';\r\nimport * as axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport s from './SellOrder.module.css';\r\nimport {Link, NavLink} from 'react-router-dom';\r\nimport SellOrdersContainer from './SellOrdersContainer';\r\n\r\nclass SellOrderFormApiComponent extends React.Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            customer: \"\",\r\n            productId: this.props.productId,\r\n            number: 0\r\n        }\r\n    }\r\n\r\n    changeHandler = (e) => {\r\n        if(e.target.type === \"number\")\r\n            this.setState({[e.target.name]: parseInt(e.target.value)});\r\n        else{\r\n            this.setState({[e.target.name]: e.target.value});\r\n        }\r\n    }\r\n\r\n    submitHandler = (e) => {\r\n        axios\r\n        .post(\"https://localhost:44367/api/sell/orders\", this.state)\r\n        .then(response =>{\r\n            console.log(response);\r\n        })\r\n        .catch(error => console.log(error));\r\n\r\n        \r\n    }\r\n\r\n    render() {\r\n        const {customer,productId, number} = this.state;\r\n        return <div> \r\n            \r\n                <div className = {s.wrapper}>\r\n\r\n                <div>Order for product {productId}: Please fill fields</div>\r\n                <Form >\r\n                    <Form.Group >\r\n                        <Form.Label>Customer</Form.Label>\r\n                        <Form.Control type=\"text\" name = \"customer\" value ={customer} onChange={this.changeHandler} />\r\n                    </Form.Group>\r\n                    <Form.Group >\r\n                        <Form.Label>Number</Form.Label>\r\n                        <Form.Control type=\"number\" name = \"number\" value ={number} onChange={this.changeHandler} />\r\n                    </Form.Group>\r\n\r\n\r\n                    <Button variant=\"outline-primary\" onClick = {this.submitHandler}><Link to = \"/products\" className={s.link}>Submit</Link></Button>\r\n                </Form>\r\n\r\n\r\n                {/*  <div>Order for product {productId}: Please fill fields</div>\r\n                    <form onSubmit = {this.submitHandler}>\r\n                        <div className=\"\">\r\n                            Customer: <input type=\"text\" name=\"customer\" value={customer} onChange = {this.changeHandler}/>\r\n                        </div>\r\n                        <div className=\"\">\r\n                            Number: <input type=\"number\" name=\"number\" value = {number} onChange = {this.changeHandler}/>\r\n                        </div>\r\n                        <button type=\"submit\">Submit</button>\r\n                    </form> */}\r\n                </div>\r\n            \r\n            </div>\r\n\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    debugger;\r\n    return {\r\n        productId: state.ProductsPage.chosenProductId\r\n    }\r\n\r\n}\r\n\r\nlet SellOrderForm = connect(mapStateToProps, {})(SellOrderFormApiComponent);\r\n\r\n\r\n\r\nexport default SellOrderForm;","C:\\Users\\Smart\\store-app\\src\\components\\BuyOrders\\BuyOrderForm.jsx",["79"],"import React from 'react';\r\nimport * as axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport s from './BuyOrder.module.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass BuyOrderFormApiComponent extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            productId: this.props.productId,\r\n            number: 0\r\n        }\r\n    }\r\n\r\n    changeHandler = (e) => {\r\n        this.setState({[e.target.name]: parseInt(e.target.value)});\r\n    }\r\n\r\n    submitHandler = () => {\r\n        axios\r\n        .post(\"https://localhost:44367/api/buy/orders\", this.state)\r\n        .then(response =>{\r\n            console.log(response);\r\n        })\r\n        .catch(error => console.log(error));\r\n    }\r\n\r\n    render() {\r\n        const {productId, number} = this.state;\r\n\r\n        return <div className = {s.wrapper}>\r\n        \r\n        <h2>Buy order for product {this.props.productId}</h2>\r\n\r\n        <Form >\r\n            <Form.Group >\r\n                <Form.Label>Number</Form.Label>\r\n                <Form.Control type=\"number\" name = \"number\" value ={number} onChange={this.changeHandler} />\r\n            </Form.Group>\r\n\r\n            <Button variant=\"outline-primary\" onClick={this.submitHandler}>\r\n                <Link to=\"/orders/buy\" className={s.link}>Submit</Link>\r\n            </Button>\r\n        </Form>\r\n\r\n\r\n            \r\n            {/* <form onSubmit={this.submitHandler}>\r\n                Number: <input type=\"number\" name=\"number\" value= {number} onChange = {this.changeHandler}/>\r\n                <button type = \"submit\">Send</button>\r\n            </form> */}\r\n        </div>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        productId: state.ProductsPage.chosenProductId\r\n    }\r\n\r\n}\r\n\r\nlet BuyOrderForm = connect(mapStateToProps, {})(BuyOrderFormApiComponent);\r\n\r\n\r\nexport default BuyOrderForm;",{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":24,"column":28,"nodeType":"86","endLine":24,"endColumn":34},{"ruleId":"87","severity":1,"message":"88","line":2,"column":10,"nodeType":"89","messageId":"90","endLine":2,"endColumn":17},{"ruleId":"84","severity":1,"message":"85","line":52,"column":49,"nodeType":"86","endLine":52,"endColumn":58},{"ruleId":"80","replacedBy":"91"},{"ruleId":"82","replacedBy":"92"},{"ruleId":"87","severity":1,"message":"93","line":6,"column":8,"nodeType":"89","messageId":"90","endLine":6,"endColumn":14},{"ruleId":"84","severity":1,"message":"85","line":35,"column":49,"nodeType":"86","endLine":35,"endColumn":58},{"ruleId":"84","severity":1,"message":"85","line":84,"column":49,"nodeType":"86","endLine":84,"endColumn":58},{"ruleId":"87","severity":1,"message":"88","line":7,"column":15,"nodeType":"89","messageId":"90","endLine":7,"endColumn":22},{"ruleId":"87","severity":1,"message":"94","line":8,"column":8,"nodeType":"89","messageId":"90","endLine":8,"endColumn":27},{"ruleId":"87","severity":1,"message":"95","line":33,"column":16,"nodeType":"89","messageId":"90","endLine":33,"endColumn":25},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar",["96"],["97"],"'Button' is defined but never used.","'SellOrdersContainer' is defined but never used.","'productId' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]